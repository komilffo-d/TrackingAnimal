// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackingAnimal.Data;

#nullable disable

namespace TrackingAnimal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230313204729_addedAnimalsTable")]
    partial class addedAnimalsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimalAnimalType", b =>
                {
                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint");

                    b.Property<long>("animalTypesId")
                        .HasColumnType("bigint");

                    b.HasKey("AnimalId", "animalTypesId");

                    b.HasIndex("animalTypesId");

                    b.ToTable("AnimalAnimalType");
                });

            modelBuilder.Entity("TrackingAnimal.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            email = "123@gmail.com",
                            firstName = "Daniil",
                            lastName = "Korepanov",
                            password = "12345678"
                        },
                        new
                        {
                            Id = 2,
                            email = "Hello@gmail.com",
                            firstName = "Oleg",
                            lastName = "Nechaev",
                            password = "abcdefghi"
                        });
                });

            modelBuilder.Entity("TrackingAnimal.Models.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("chipperId")
                        .HasColumnType("int");

                    b.Property<DateTime>("chippingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("chippingLocationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("deathDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("height")
                        .HasColumnType("real");

                    b.Property<float>("length")
                        .HasColumnType("real");

                    b.Property<string>("lifeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("TrackingAnimal.Models.AnimalType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypes");
                });

            modelBuilder.Entity("TrackingAnimal.Models.LocationPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Lalitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("TrackingAnimal.Models.LocationVisitedAnimal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("LocationPointId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dateTimeOfVisitLocationPoint")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationPointId");

                    b.ToTable("locationVisitedAnimals");
                });

            modelBuilder.Entity("AnimalAnimalType", b =>
                {
                    b.HasOne("TrackingAnimal.Models.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackingAnimal.Models.AnimalType", null)
                        .WithMany()
                        .HasForeignKey("animalTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrackingAnimal.Models.LocationVisitedAnimal", b =>
                {
                    b.HasOne("TrackingAnimal.Models.LocationPoint", "LocationPoint")
                        .WithMany()
                        .HasForeignKey("LocationPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationPoint");
                });
#pragma warning restore 612, 618
        }
    }
}
